import{n as s,S as e}from"./index.78b82f7f.js";import{S as t}from"./box.c9997a17.js";import"./vendor.97cc0df3.js";const i={};var r=s({name:"SGrid",props:{size:{type:String,required:!0}}},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("div",{staticClass:"s-grid"},[t("div",{class:s.size},[s._t("default")],2)])}),[],!1,a,null,null,null);function a(s){for(let e in i)this[e]=i[e]}const n={};var o=s({components:{SGrid:function(){return r.exports}(),SBox:t,STitle:e}},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("div",{staticClass:"s-grid-example"},[t("s-title",{staticClass:"h1",attrs:{title:"Grid"}}),t("p",{staticClass:"subtitle"},[s._v(" O grid que usamos hoje pode ser considerado um grid híbrido. Ele é fluído nos breakpoints até 1440px, onde essa passa a ser ter largura fixa. Essa definição é para garantir que a responsividade dos componentes em telas muito grandes não se torne um problema ou minimamente difícil de se administrar. ")]),t("s-box",{staticClass:"flex-inline flex-center"},[t("s-grid",{attrs:{size:"col-1"}}),t("s-grid",{attrs:{size:"col-1"}})],1)],1)}),[],!1,l,null,null,null);function l(s){for(let e in n)this[e]=n[e]}var d=function(){return o.exports}();export{d as default};
