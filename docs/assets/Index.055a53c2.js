import{n as e,S as s}from"./index.6de2ca96.js";import{S as t}from"./box.e2f43288.js";import"./vendor.8161f9ef.js";const i={};var r=e({name:"SGrid",props:{size:{type:String,required:!0}}},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("div",{staticClass:"s-grid"},[t("div",{class:e.size},[e._t("default")],2)])}),[],!1,a,null,null,null);function a(e){for(let s in i)this[s]=i[s]}const n={};var o=e({components:{SGrid:function(){return r.exports}(),SBox:t,STitle:s}},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("div",{staticClass:"s-grid-example"},[t("s-title",{staticClass:"h1",attrs:{title:"Grid"}}),t("p",{staticClass:"subtitle"},[e._v(" O grid que usamos hoje pode ser considerado um grid híbrido. Ele é fluído nos breakpoints até 1440px, onde essa passa a ser ter largura fixa. Essa definição é para garantir que a responsividade dos componentes em telas muito grandes não se torne um problema ou minimamente difícil de se administrar. ")]),t("s-box",{staticClass:"flex-inline flex-center"},[t("s-grid",{attrs:{size:"col-1"}}),t("s-grid",{attrs:{size:"col-1"}})],1)],1)}),[],!1,l,null,null,null);function l(e){for(let s in n)this[s]=n[s]}var d=function(){return o.exports}();export{d as default};
